my_file
my_conn <- file(my_file)
my_matrix <- read.csv(my_conn)
if (pollutant == "sulfate") {
#   print(mean(my_matrix[, 2]))
}
else {
#   print(mean(my_matrix[, 3]))
}
}
}
pollutantmean("specdata", "sulfate", 4)
pollutantmean <- function(directory, pollutant, id = 1:332) {
for(i in id) {
my_file <- cat("/home/manuel/datasciencecoursera/", directory, "/" , "001" , ".csv", sep = "")
my_file
my_conn <- file("/home/manuel/datasciencecoursera/specdata/001.csv")
my_matrix <- read.csv(my_conn)
if (pollutant == "sulfate") {
#   print(mean(my_matrix[, 2]))
}
else {
#   print(mean(my_matrix[, 3]))
}
}
}
pollutantmean("specdata", "sulfate", 4)
pollutantmean <- function(directory, pollutant, id = 1:332) {
for(i in id) {
my_file <- c(cat("/home/manuel/datasciencecoursera/", directory, "/" , "001" , ".csv", sep = ""))
my_file
my_conn <- file("myfile")
my_matrix <- read.csv(my_conn)
if (pollutant == "sulfate") {
#   print(mean(my_matrix[, 2]))
}
else {
#   print(mean(my_matrix[, 3]))
}
}
}
pollutantmean("specdata", "sulfate", 4)
pollutantmean <- function(directory, pollutant, id = 1:332) {
for(i in id) {
my_file <- c(cat("/home/manuel/datasciencecoursera/", directory, "/" , "001" , ".csv", sep = ""))
my_file
my_conn <- file(myfile)
my_matrix <- read.csv(my_conn)
if (pollutant == "sulfate") {
#   print(mean(my_matrix[, 2]))
}
else {
#   print(mean(my_matrix[, 3]))
}
}
}
pollutantmean("specdata", "sulfate", 4)
pollutantmean <- function(directory, pollutant, id = 1:332) {
for(i in id) {
my_file <- c(cat("/home/manuel/datasciencecoursera/", directory, "/" , "001" , ".csv", sep = ""))
my_file
dump(myfile)
my_conn <- file(myfile)
my_matrix <- read.csv(my_conn)
if (pollutant == "sulfate") {
#   print(mean(my_matrix[, 2]))
}
else {
#   print(mean(my_matrix[, 3]))
}
}
}
pollutantmean("specdata", "sulfate", 4)
pollutantmean <- function(directory, pollutant, id = 1:332) {
for(i in id) {
my_file <- c(cat("/home/manuel/datasciencecoursera/", directory, "/" , "001" , ".csv", sep = ""))
my_file
dump(my_file)
my_conn <- file(my_file)
my_matrix <- read.csv(my_conn)
if (pollutant == "sulfate") {
#   print(mean(my_matrix[, 2]))
}
else {
#   print(mean(my_matrix[, 3]))
}
}
}
pollutantmean("specdata", "sulfate", 4)
pollutantmean <- function(directory, pollutant, id = 1:332) {
for(i in id) {
my_file <- c(cat("/home/manuel/datasciencecoursera/", directory, "/" , "001" , ".csv", sep = ""))
my_file
dump(my_file)
class(my_file)
my_conn <- file(my_file)
my_matrix <- read.csv(my_conn)
if (pollutant == "sulfate") {
#   print(mean(my_matrix[, 2]))
}
else {
#   print(mean(my_matrix[, 3]))
}
}
}
pollutantmean("specdata", "sulfate", 4)
pollutantmean <- function(directory, pollutant, id = 1:332) {
for(i in id) {
my_file <- c(cat("/home/manuel/datasciencecoursera/", directory, "/" , "001" , ".csv", sep = ""))
my_conn <- file(c(my_file))
my_matrix <- read.csv(my_conn)
if (pollutant == "sulfate") {
#   print(mean(my_matrix[, 2]))
}
else {
#   print(mean(my_matrix[, 3]))
}
}
}
pollutantmean("specdata", "sulfate", 4)
pollutantmean <- function(directory, pollutant, id = 1:332) {
for(i in id) {
my_conn <- file(cat("/home/manuel/datasciencecoursera/", directory, "/" , "001" , ".csv", sep = ""))
my_matrix <- read.csv(my_conn)
if (pollutant == "sulfate") {
#   print(mean(my_matrix[, 2]))
}
else {
#   print(mean(my_matrix[, 3]))
}
}
}
pollutantmean("specdata", "sulfate", 4)
pollutantmean <- function(directory, pollutant, id = 1:332) {
for(i in id) {
my_conn <- file("/home/manuel/datasciencecoursera/specdata/001.csv")
my_matrix <- read.csv(my_conn)
if (pollutant == "sulfate") {
#   print(mean(my_matrix[, 2]))
}
else {
#   print(mean(my_matrix[, 3]))
}
}
}
pollutantmean("specdata", "sulfate", 4)
pollutantmean <- function(directory, pollutant, id = 1:332) {
for(i in id) {
my_conn <- file("/home/manuel/datasciencecoursera/specdata/001.csv")
my_matrix <- read.csv(my_conn)
my_matrix()
if (pollutant == "sulfate") {
#   print(mean(my_matrix[, 2]))
}
else {
#   print(mean(my_matrix[, 3]))
}
}
}
pollutantmean("specdata", "sulfate", 4)
pollutantmean <- function(directory, pollutant, id = 1:332) {
for(i in id) {
my_conn <- file("/home/manuel/datasciencecoursera/specdata/001.csv")
my_matrix <- read.csv(my_conn)
my_matrix
if (pollutant == "sulfate") {
#   print(mean(my_matrix[, 2]))
}
else {
#   print(mean(my_matrix[, 3]))
}
}
}
pollutantmean("specdata", "sulfate", 4)
pollutantmean <- function(directory, pollutant, id = 1:332) {
for(i in id) {
my_conn <- file("/home/manuel/datasciencecoursera/specdata/001.csv", open = "r")
my_matrix <- read.csv(my_conn, header = TRUE, sep  = ",")
my_matrix
if (pollutant == "sulfate") {
#   print(mean(my_matrix[, 2]))
}
else {
#   print(mean(my_matrix[, 3]))
}
}
}
pollutantmean("specdata", "sulfate", 4)
pollutantmean <- function(directory, pollutant, id = 1:332) {
for(i in id) {
my_conn <- file("/home/manuel/datasciencecoursera/specdata/001.csv", open = "r")
my_matrix <- read.csv(my_conn, header = TRUE, sep  = ",")
my_matrix[2, 2]
if (pollutant == "sulfate") {
#   print(mean(my_matrix[, 2]))
}
else {
#   print(mean(my_matrix[, 3]))
}
}
}
pollutantmean("specdata", "sulfate", 4)
pollutantmean <- function(directory, pollutant, id = 1:332) {
for(i in id) {
my_conn <- file("/home/manuel/datasciencecoursera/specdata/001.csv", open = "r")
my_matrix <- read.csv(my_conn, header = TRUE, sep  = ",")
print(my_matrix[2, 2])
if (pollutant == "sulfate") {
#   print(mean(my_matrix[, 2]))
}
else {
#   print(mean(my_matrix[, 3]))
}
}
}
pollutantmean("specdata", "sulfate", 4)
pollutantmean <- function(directory, pollutant, id = 1:332) {
for(i in id) {
my_conn <- file("/home/manuel/datasciencecoursera/specdata/001.csv", open = "r")
my_matrix <- read.csv(my_conn, header = TRUE, sep  = ",")
print(my_matrix[200, 2])
if (pollutant == "sulfate") {
#   print(mean(my_matrix[, 2]))
}
else {
#   print(mean(my_matrix[, 3]))
}
}
}
pollutantmean("specdata", "sulfate", 4)
pollutantmean <- function(directory, pollutant, id = 1:332) {
for(i in id) {
my_conn <- file("/home/manuel/datasciencecoursera/specdata/001.csv", open = "r")
my_matrix <- read.csv(my_conn, header = TRUE, sep  = ",")
print(my_matrix[250, 2])
if (pollutant == "sulfate") {
#   print(mean(my_matrix[, 2]))
}
else {
#   print(mean(my_matrix[, 3]))
}
}
}
pollutantmean("specdata", "sulfate", 4)
pollutantmean <- function(directory, pollutant, id = 1:332) {
for(i in id) {
my_conn <- file("/home/manuel/datasciencecoursera/specdata/001.csv", open = "r")
my_matrix <- read.csv(my_conn, header = TRUE, sep  = ",")
print(my_matrix[2, 1])
if (pollutant == "sulfate") {
#   print(mean(my_matrix[, 2]))
}
else {
#   print(mean(my_matrix[, 3]))
}
}
}
pollutantmean("specdata", "sulfate", 4)
pollutantmean <- function(directory, pollutant, id = 1:332) {
for(i in id) {
my_conn <- file("/home/manuel/datasciencecoursera/specdata/001.csv", open = "r")
my_matrix <- read.csv(my_conn, header = TRUE, sep  = ",")
if (pollutant == "sulfate") {
print(mean(my_matrix[, 2]))
}
else {
print(mean(my_matrix[, 3]))
}
}
}
pollutantmean("specdata", "sulfate", 4)
pollutantmean <- function(directory, pollutant, id = 1:332) {
for(i in id) {
my_conn <- file("/home/manuel/datasciencecoursera/specdata/005.csv", open = "r")
my_matrix <- read.csv(my_conn, header = TRUE, sep  = ",")
if (pollutant == "sulfate") {
print(mean(my_matrix[, 2]))
}
else {
print(mean(my_matrix[, 3]))
}
}
}
pollutantmean("specdata", "sulfate", 4)
pollutantmean <- function(directory, pollutant, id = 1:332) {
for(i in id) {
my_conn <- file("/home/manuel/datasciencecoursera/specdata/005.csv", open = "r")
my_matrix <- read.csv(my_conn, header = TRUE, sep  = ",")
if (pollutant == "sulfate") {
print(mean(my_matrix[, 2] > 0))
}
else {
print(mean(my_matrix[, 3]))
}
}
}
pollutantmean("specdata", "sulfate", 4)
library(swirl)
swirl()
quit
exit()
quit()
}
library("swirl")
ls()
rm(list=ls())
ls()
library("swirl")
library("swirl")
swirl()
library("swirl")
swirl()
submit()
evaluate(sd, c(1.4, 3.6, 7.9, 8.8))
evaluate(function(x){x+1}, 6)
evaluate(function(x){x[1]}, c(8, 4, 0))
evaluate(function(x){x[length(x)]}, c(8, 4, 0))
?paste
paste("Programming", "is", "fun!")
submit()
telegram("oooooooooye")
submit()
submit()
mad_libs("www", "eee", "sss")
mad_libs("www", "eee")
mad_libs("www", "eee")
mad_libs("www", "eee", "sss")
submit()
submit()
submit()
submit()
submit()
submit()
I %p% R!
I %p% R!
I %p% love %p% R!
'I' %p% 'love' %p% 'R!'
d1 <- Sys.Date()
class(d1)
unclass(d1)
d1
d2 <- as.Date("1969-01-01")
unclass(d2)
Sys.time()
t1 <- Sys.time()
t1
class(t1)
unclass(t1)
t2 <- as.POSIXlt(Sys.time())
class(t2)
t2
unclass(t2)
str(unclass(t2))
t2[min]
t2["min"]
t2$min
weekdays(d1)
months(t1)
quarters(t2)
t3 <- "October 17, 1986 08:24"
t4 <- strptime(t3, "%B %d, %Y %H:%M")
t4
class(t4)
Sys.time > t1
Sys.time() > t1
Sys.time() - t1
difftime(Sys.time(), t1, units = 'days')
libreary("swirl")
library("swirl")
swirl()
head(flags)
dim(flags)
viewinfo()
class(flags)
cls_list <- lapply(flags, class)
cls_list
class(cls_list)
as.character(cls_list)
cls_vect <- sapply(flags, class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[, 11:17]
head(flag_colors)
lapply(flag_colors, sum())
lapply(flag_colors, sum
lapply(flag_colors, sum)
lapply(flag_colors, sum)
sapply(flag_colors, sum)
sapply(flag_colors, mean)
flag_shapes <- flags[, 19:23]
lapply(flag_shapes, range
0
lapply(flag_shapes, range)
shape_mat <- sapply(flag_shapes, range)
shape-mat
shape_mat
class(shape_mat)
unique(c(3, 4, 5, 6, 6, 6, 6))
unique(c(3, 4, 5, 5, 5, 6, 6))
unique_vals <- lapply(flags, unique)
unique_vals
lapply(unique_vals, length)
slapply(unique_vals, length)
sapply(unique_vals, length)
sapply(flags, unique)
lapply(unique_vals, function(elem) elem[2])
sapply)flags, unique=
sapply(flags, unique)
vapply(flags, unique, numeric(1))
ok()
sapply(flags, class)
flags
vapply(flags, class, character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate, flags$landmass, mean)
lapply(unique_vals, function(elem) elem[2])
lapply(unique_vals, function(elem) elem[2])
tapply(unique_vals, function(elem) elem[2])
tapply(flags$population, flags$red, summary)
tapply(flags$population, flags$landmass, summary)
library(dataset)
library("dataset")
library(datasets)
data(iris)
?iris
iris
tapply(iris$Sepal.Lenght, iris$virginica, mean)
?tapply
class(iris)
tapply(iris$Sepal.Lenght, iris$Species , mean)
tapply(iris$Sepal.Lenght, iris$Species == "red", mean)
tapply(iris$Sepal.Lenght, iris$Species == "virginica", mean)
lapply(iris$Sepal.Lenght, mean)
test ;' lapply(iris$Sepal.Lenght, mean)
test <- lapply(iris$Sepal.Lenght, mean)
test
tapply(iris$Sepal.Lenght, iris$Species[, "virginica"], mean)
tapply(iris$Sepal.Lenght, iris$Species[, virginica], mean)
tapply(iris$Sepal.Lenght, iris$Species, mean)
length(iris.Sepal.Length)
length(iris$Sepal.Length)
length(iris$Species)
tapply(iris$Sepal.Length, iris$Species, mean)
tapply(iris$Sepal.Length, iris$Species=="virginica", mean)
tapply(iris$Sepal.Length, iris$Species["virginica"], mean)
tapply(iris$Sepal.Length, iris$Species=="virginica", mean)
tapply(iris$Sepal.Length, iris$Species, mean)
lapply(unique_vals, function(elem) elem[2])
lapply(unique_vals, function(elem) elem[2])
library(datasets)
data(mtcars)
mtcars
sapply(split(mtcars$mpg, mtcars$cyl), mean)
split(mtcars$mpg, mtcars$cyl)
tapply(mtcars$mpg, mtcars$cyl, mean)
with(mtcars, tapply(mpg, cyl, mean))
apply(mtcars, 2, mean)
mean(mtcars$mpg, mtcars$cyl)
mean(mtcars$mpg, mtcars$cyl)
tapply(mtcars$cyl, mtcars$mpg, mean)
sapply(mtcars, cyl, mean)
split(mtcars, mtcars$cyl)
lapply(mtcars, mean)
apply(iris[, 1:4], 1, mean)
colMeans(iris)
iris
colMeans(iris)
apply(iris, 1, mean)
rowMeans(iris[, 1:4])
apply(iris[, 1:4], 1, mean)
apply(iris, 2, mean)
apply(iris, 2, mean)
apply(iris[, 1:4], 1, mean)
ss <-- apply(iris[, 1:4], 1, mean)
class(ss)
ss <- rowMeans(iris[, 1:4])
class(ss)
ss <- apply(iris[, 1:4], 1, mean)
class(ss)
mtcars
tapply(mtcars$cyl, mtcars$mpg, mean)
mean(mtcars$mpg, mtcars$cyl)
tapply(mtcars$mpg, mtcars$cyl, mean)
tapply(mtcars$hp, mtcars$cyl, mean)
abs
a <- tapply(mtcars$hp, mtcars$cyl, mean)
tapply(mtcars$hp, mtcars$cyl, mean)
tapply(mtcars$mpg, mtcars$cyl, mean)
209.21429 - 26.66364
debug(ls)
ls)=
ls()
iris
apply(iris, 1, mean)
colMeans(iris)
apply(iris[, 1:4], 2, mean)
tapply(mtcars$mpg, mtcars$cyl, mean)
tapply(mtcars$cyl, mtcars$hp, mean)
tapply(mtcars$hp, mtcars$cyl, mean)
setwd("/home/manuel/datasciencecoursera/ProgrammingAssignment2")
source("cachematrix.R")
z <- matrix(1:4, 2, 2)
j <- makeCacheMatrix(z)
cacheSolve(j)
source("cachematrix.R")
z <- matrix(1:4, 2, 2)
j <- makeCacheMatrix(z)
cacheSolve(j)
set.seed(1)
rpois(5, 2)
